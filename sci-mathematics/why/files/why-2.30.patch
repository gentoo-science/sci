diff -Naurp why-2.30-orig/jc/jc_annot_inference.ml why-2.30-save/jc/jc_annot_inference.ml
--- why-2.30-orig/jc/jc_annot_inference.ml	2011-10-24 15:21:06.000000000 +0000
+++ why-2.30-save/jc/jc_annot_inference.ml	2011-12-21 18:08:50.920338014 +0000
@@ -147,6 +147,7 @@ let rec destruct_pointer t =
 	      let offt = new term ~typ:integer_type tnode in
 	      Some(tptr,offt)
 	end
+    | JCTlet _
     | JCTvar _ | JCTderef _ | JCTapp _ | JCTold _ | JCTat _ | JCTif _ 
     | JCTrange _ | JCTmatch _ | JCTaddress _ | JCTbase_block _
     | JCTconst _ | JCTbinary _ | JCTunary _ | JCToffset _ | JCTinstanceof _ 
@@ -491,7 +492,7 @@ let reg_annot ?id ?kind ?name ~pos ~anch
   in
   Format.fprintf Format.str_formatter "%a" Jc_output.assertion a;
   let formula = Format.flush_str_formatter () in
-  let lab = Output.reg_pos "G" ?id ?kind ?name ~formula loc in
+  let lab = Output.old_reg_pos "G" ?id ?kind ?name ~formula (Loc.extract loc) in
   new assertion_with ~mark:lab a
 
 
@@ -608,6 +609,7 @@ let rec atp_of_term t =
 	Atp.Fn(atp_of_unop uop, [atp_of_term t1])
     | JCTvar _ | JCTderef _ | JCTapp _ | JCToffset _ ->
 	Atp.Var (Vwp.variable_for_term t)
+    | JCTlet _
     | JCTshift _ | JCTold _ | JCTat _ | JCTmatch _ | JCTinstanceof _ 
     | JCTcast _ | JCTrange_cast _ | JCTbitwise_cast _ | JCTreal_cast _ 
     | JCTaddress _ | JCTif _ | JCTrange _ | JCTunary _ | JCTbase_block _ ->
@@ -1194,6 +1196,7 @@ let linearize t =
 		(coeffs, minus_num cst1)
 	    | _ -> err ()
 	  end
+      | JCTlet _
       | JCTvar _ | JCTderef _ | JCToffset _ | JCTapp _ | JCTbinary _ 
       | JCTunary _ | JCTshift _ | JCTinstanceof _ | JCTmatch _ 
       | JCTold _ | JCTat _ | JCTcast _ | JCTbitwise_cast _ 
