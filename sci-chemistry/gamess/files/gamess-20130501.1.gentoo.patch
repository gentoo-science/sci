diff -urN gamess.orig/comp gamess.new/comp
--- gamess.orig/comp	2013-05-03 23:18:53.000000000 +0300
+++ gamess.new/comp	2013-09-28 18:32:46.621341822 +0300
@@ -1544,7 +1544,7 @@
 #   g77 does not support FORTRAN logical units above 99, or 128 bit math.
 #
    case g77:
-   set OPT = '-O2'
+   set gentoo-OPT = '-O2'
    if ($MODULE == ormas1) set OPT='-O2 -fno-move-all-movables' # RH9, g77 3.3
    if ($MODULE == zheev)  set OPT='-O0'  # defensive compiling
    if (($MODULE == qeigen) || ($MODULE == int2c)) then
@@ -1574,7 +1574,7 @@
 #      -std=legacy  suppresses warnings about use of f77 constructs.
 #
    case gfortran:
-   set OPT='-O2'
+   set gentoo-OPT='-O2'
    if ($MODULE == zheev)  set OPT='-O0'  # defensive compiling
    if ($MODULE == pcmcv2) set OPT='-O1'  # EFP+CPCM, ala Francois, v4.1.2
    if ($GMS_GFORTRAN_VERNO == 4.6) then
@@ -1636,7 +1636,7 @@
 #    optimizations in 32 bit mode, as a function of the ifort version.
 #
    case ifort:
-   set OPT = '-O3'
+   set gentoo-OPT = '-O2'
    if ($MODULE == delocl) set OPT='-O0'  # from Cheol
    if ($MODULE == prpamm) set OPT='-O0'  # for exam13
    if ($MODULE == zheev)  set OPT='-O0'
@@ -1755,7 +1755,7 @@
 #           -finit-real=<zero|inf|-inf|nan>  could be interesting debug opt
 #           -fno-automatic forces static storage of all local variables
 #           -fno-whole-file suppresses argument's data type checking
-      set OPT='-O2'
+      set gentoo-OPT='-O2'
       if (".$GMS_DEBUG_FLAGS" != .) set OPT="$GMS_DEBUG_FLAGS"
 
       if ($GMS_GFORTRAN_VERNO == 4.6) then
@@ -1804,6 +1804,7 @@
             breaksw
          case 4.6:
          case 4.7:
+         case 4.8:
             set EXTRAOPT="$EXTRAOPT -fno-whole-file"
             breaksw
          default:
@@ -1833,7 +1834,7 @@
 #     -WB means warn but don't fail on out-of-bounds array references
 #     -ftz flushes underflow results to zero
 #
-      set OPT = '-O2'
+      set gentoo-OPT = '-O2'
       if (".$GMS_DEBUG_FLAGS" != .) set OPT="$GMS_DEBUG_FLAGS"
 #       alas, I'm so tired of hearing about so many versions failing to
 #       diagonalize, that this time critical code is run w/o optimization.
diff -urN gamess.orig/ddi/compddi gamess.new/ddi/compddi
--- gamess.orig/ddi/compddi	2013-05-03 23:14:15.000000000 +0300
+++ gamess.new/ddi/compddi	2013-09-28 18:09:10.390246354 +0300
@@ -640,7 +640,7 @@
 
      set FORTRAN=$GMS_FORTRAN   # might be g77, gfortran, ifort, pgf77, f2c
 
-     set CC = 'gcc'
+     set gentoo-CC = 'gcc'
      set CFLAGS = "-DLINUX -O3 -fstrict-aliasing -I./"
      set CLIBS  = "-lpthread"
 
@@ -694,7 +694,7 @@
                              set ARCH='-m64'
      if (`uname -p` == ia64) set ARCH=''
 
-     set CC = 'gcc'
+     set gentoo-CC = 'gcc'
      set CFLAGS = "-DLINUX $ARCH -O3 -fstrict-aliasing -I./"
      set CLIBS  = "-lpthread"
 
diff -urN gamess.orig/ddi/kickoff/ddikick.c gamess.new/ddi/kickoff/ddikick.c
--- gamess.orig/ddi/kickoff/ddikick.c	2011-11-22 21:54:33.000000000 +0200
+++ gamess.new/ddi/kickoff/ddikick.c	2013-09-28 18:10:27.380423340 +0300
@@ -105,7 +105,7 @@
           remoteshell = argv[++i];
        } else {
           if((remoteshell = getenv("DDI_RSH")) == NULL) {
-              remoteshell = (char *) strdup("rsh");
+              remoteshell = (char *) strdup("ssh");
           }
        }
 
diff -urN gamess.orig/gms-files.csh gamess.new/gms-files.csh
--- gamess.orig/gms-files.csh	2013-05-03 22:18:03.000000000 +0300
+++ gamess.new/gms-files.csh	2013-09-28 18:28:04.952744349 +0300
@@ -28,7 +28,7 @@
 #     to see all the file definitions (one is just below).
 #
 #---quiet---set echo
-setenv AUXDATA $GMSPATH/auxdata
+setenv AUXDATA /usr/share/gamess
 setenv  EXTBAS /dev/null
 setenv  NUCBAS /dev/null
 setenv  POSBAS /dev/null
diff -urN gamess.orig/lked gamess.new/lked
--- gamess.orig/lked	2013-05-17 19:15:06.000000000 +0300
+++ gamess.new/lked	2013-09-28 18:20:14.922777944 +0300
@@ -384,17 +384,17 @@
    switch ($GMS_FORTRAN)
      case g77:
         set LDR='g77'
-        set LDOPTS=' '  # add '-Wl,-M' to see load map
+        set gentoo-LDOPTS=' '  # add '-Wl,-M' to see load map
         set FORTLIBS=' '
         breaksw
      case gfortran:
         set LDR='gfortran'
-        set LDOPTS=' '
+        set gentoo-LDOPTS=' '
         set FORTLIBS=' '
         breaksw
      case ifort:
         set LDR='ifort'
-        set LDOPTS=' '  # add '-Wl,-M' to see load map
+        set gentoo-LDOPTS=' '  # add '-Wl,-M' to see load map
         set FORTLIBS='-Vaxlib'
         breaksw
      case pgfortran
@@ -405,7 +405,7 @@
         breaksw
      case f2c:
         set LDR='gcc'
-        set LDOPTS=' '
+        set gentoo-LDOPTS=' '
         set FORTLIBS='-lf2c -lm'
         breaksw
      default:
@@ -458,12 +458,7 @@
       #     Otherwise, attempt a link against shared object libs.
       #     See the 64 bit Atlas below for a way to fix the linker's
       #     not being able to locate -lf77blas, if that happens.
-      if (-e $GMS_MATHLIB_PATH/libf77blas.a) then
-         set MATHLIBS="$GMS_MATHLIB_PATH/libf77blas.a"
-         set MATHLIBS="$MATHLIBS $GMS_MATHLIB_PATH/libatlas.a"
-      else
-         set MATHLIBS="-L$GMS_MATHLIB_PATH -lf77blas -latlas"
-      endif
+      set MATHLIBS=`${PKG_CONFIG} --libs blas`
       set BLAS=' '
       breaksw
 
@@ -497,12 +492,12 @@
    switch ($GMS_FORTRAN)
       case gfortran:
          set LDR='gfortran'
-         set LDOPTS=' '
+         set gentoo-LDOPTS=' '
          set FORTLIBS=' '
          breaksw
       case ifort:
          set LDR='ifort'
-         set LDOPTS='-i8'  # -Wl,-M generates a load map
+         set gentoo-LDOPTS=' '  # -Wl,-M generates a load map
 #            this auxiliary library seems to have disappeared in ifort 10
          set FORTLIBS=' '
          if($GMS_IFORT_VERNO < 10) set FORTLIBS='-Vaxlib'
@@ -619,13 +614,7 @@
       #          ln -s liblapack_atlas.so.3.0 liblapack.so
       #          ln -s liblapack.so.3.0       liblapack.so
       #     It is strange the RPM's don't do these soft links for us.
-      if (-e $GMS_MATHLIB_PATH/libf77blas.a) then
-         set MATHLIBS="$GMS_MATHLIB_PATH/libf77blas.a"
-         set MATHLIBS="$MATHLIBS $GMS_MATHLIB_PATH/libatlas.a"
-      else
-         set MATHLIBS="-L$GMS_MATHLIB_PATH -lf77blas -latlas"
-         if ($CCHEM == true) set MATHLIBS="$MATHLIBS -llapack"
-      endif
+      set MATHLIBS=`${PKG_CONFIG} --libs blas`
       set BLAS=' '
       breaksw
 
diff -urN gamess.orig/runall gamess.new/runall
--- gamess.orig/runall	2012-02-03 01:55:01.000000000 +0200
+++ gamess.new/runall	2013-09-28 18:20:59.446867749 +0300
@@ -46,7 +46,7 @@
      xgms -v $VERNO -q $QUEUE -l exam$NUM.log exam$NUM
      sleep 2
   else
-     ./rungms exam$NUM $VERNO 1  >&  exam$NUM.log
+     rungms exam$NUM $VERNO 1  >&  exam$NUM.log
   endif
   @ i++
 end
diff -urN gamess.orig/rungms gamess.new/rungms
--- gamess.orig/rungms	2013-05-17 19:15:11.000000000 +0300
+++ gamess.new/rungms	2013-09-28 18:26:53.268594417 +0300
@@ -60,9 +60,9 @@
 #       See also a very old LoadLeveler "ll-gms" for some IBM systems.
 #
 set TARGET=sockets
-set SCR=/scr/$USER
-set USERSCR=~$USER/scr
-set GMSPATH=/u1/mike/gamess
+set SCR=`pwd`
+set USERSCR=`pwd`
+set GMSPATH=/usr/bin
 #
 set JOB=$1      # name of the input file xxx.inp, give only the xxx part
 set VERNO=$2    # revision number of the executable created by 'lked' step
